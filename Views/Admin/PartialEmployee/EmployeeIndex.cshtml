<button type="button" title="" class="btn btn-success" style="color: #ffffff;" data-bs-toggle="modal"
    data-bs-target="#modalEmployeeCreate">
    <i class="fa-solid fa-circle-plus" style="color: #ffffff;"></i>
    Add Employee
</button>

@Html.Partial("PartialEmployee/CreateEmployee")
@Html.Partial("PartialEmployee/EmployeeUpdate")
@Html.Partial("PartialEmployee/EmployeeTable")

<script src="~/lib/jquery/dist/jquery.js"></script>
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>



<script>
    var selectedEmployee;
    var selectedEmployeeId;
    var EmployeeList = {};
    var gmailaddress;
    var arrs = {};

    $(document).ready(function () {

        displayEmployeeData();
        getEmployee();
        baranggay();
        Municipality();
        Province();












        function getEmployee() {
            $.ajax("../api/adminapi/getEmployee")
                .done(function (result) {
                    EmployeeList = result;
                    console.log(EmployeeList);
                    result.forEach(function (item) {
                        gmailaddress = item.gmailaddress;

                    });


                });

    @* updateEmployeeAge(); *@

        }


        //////calculate number of years 
        function calculateYearsDifference(userDateInput) {
            var dateRegex = /^\d{4}-\d{2}-\d{2}$/;

            if (dateRegex.test(userDateInput)) {
                var yearsDifference = new Date().getFullYear() - parseInt(userDateInput.slice(0, 4));
                console.log(yearsDifference);
                return yearsDifference;
            } else {
                return "Invalid date format. Please enter a date in the format YYYY-MM-DD.";
            }
        }




        $("#createEmployee").click((e) => {

            console.log("yehey na click jyud ko");
            // console.log(equipname);

            var arrData = {}; //ayaw ni tan dug kani dre nga line
            var formelements = $("#createEmployeeForm .form-group");

            //getting the data from the form
            var formInputs = $("#createEmployeeForm").serializeArray();
            formInputs.forEach(function (item) {
                arrData[item.name] = item.value;
            });


            //////// function random number
            var random8DigitNumber = Math.floor(Math.random() * 100000000).toString().padStart(8, '0');
            //console.log(random8DigitNumber);


            // Example usage:
            var userDateInput = formInputs[3].value; // Replace with the user's input
            var result = calculateYearsDifference(userDateInput);
            console.log("mao nis siya ang result" + result); // This will either print the years difference or an error message

        



            if (formInputs.length === formelements.length && formInputs[0].value !== '') {
                // if (formInputs[0].value !== '' && formInputs[1].value !== '' && formInputs[2].value !== '' && formInputs[3].value !== '' && formInputs[4].value !== '' && formInputs[5].value !== '' && formInputs[6].value !== '') {
             //  alert(`Purok ${arrData.AddressPurok}, ${arrData.AddressBarangay}, ${arrData.AddressMunicipality}, ${arrData.AddressProvince}`);
                if (formInputs[0].value != gmailaddress) {
                    //AJAX ADD Student
                    console.log(formInputs);
                    $.ajax
                        ({
                            url: "../api/adminapi/AddEmployee",
                            type: "POST",
                            data:
                            {
                                addEmployee: arrData,
                                randompass: random8DigitNumber,
                                address: `Purok ${arrData.AddressPurok}, ${arrData.AddressBarangay}, ${arrData.AddressMunicipality}, ${arrData.AddressProvince}`,
                                age: result
                              
                            },
                        })
                        .done(function () {

                            $("#createEmployeeForm")[0].reset();
                            $("#modalEmployeeCreate").modal("toggle");

                            displaySavedProgress();

                            displayEmployeeData();

                        });
                } else {
                    vol1();
                }


            }
            else {
                alertError();
            }
        });

        function displayEmployeeData() {
            $('#EmployeeData').DataTable().destroy();
            if (!$.fn.DataTable.isDataTable('#EmployeeData')) {
                $('#EmployeeData').DataTable({
                    responsive: true,
                    ajax: {
                        url: '../api/adminapi/getEmployee', // API endpoint to retrieve department
                        dataSrc: ''
                    },
                    columns:
                        [
                            { data: 'epiId' },
                            { data: 'firstname' },
                            { data: 'lastname' },
                            { data: 'middlename' },
                            { data: 'birthdate' },
                            { data: 'gender' },
                            { data: 'age' },
                            { data: 'address' },
                            { data: 'gmailaddress' },

                            {
                                data: 'epiId',
                                render: function (data, type, row) {
                                    return btnAddEmployeeData(data);
                                }
                            },
                        ]
                });
            }
            getEmployee();
        }

        function btnAddEmployeeData(id) {
            return "<center><a class='btn btn-success EmployeeUpdate' data-epiId=" + id + "><i class='fa-solid fa-pen-to-square' style='color : #ffffff;'></i></a> | <a class='btn btn-danger EmployeeDelete' data-epiId=" + id + "><i class='fa-solid fa-trash' style='color : #ffffff;'></i></a></center>"
        }


        $("tbody").delegate(".EmployeeUpdate", "click", function (e) {
            console.log("I was clicked");
            var i = e.target.closest("a").getAttribute("data-epiId");
            if (i != null) {
                $("#createEmployeeForm")[0].reset();
                $("#modalEmployeeUpdate").modal("toggle");

                selectedEmployeeId = i;
                selectedEmployee = EmployeeList.find(element => element.epiId == i);

                console.log(selectedEmployee);

                oFormObject = document.forms["updateEmployeeForm"];
                initForm(oFormObject, selectedEmployee);

                console.log(selectedEmployee.gender);
                $("#gends").val(selectedEmployee.gender);

            }
        });

        function initForm(form, data) {

            Object.getOwnPropertyNames(data).forEach(function (item) {
                var currentElem = form.elements[item.charAt(0).toUpperCase() + item.slice(1)];

                if (currentElem == null) { return; }

                  if (currentElem.tagName == "SELECT") {
                    // Check the ID of the SELECT element
                    if (currentElem.id == "gender") {
                        // Handle the case where the current element is a SELECT with a specific ID
                        var selectChildren = Array.from(currentElem.children);
                        var matchedOpt = selectChildren.find(opt => opt.innerText.trim() == selectedEmployee.gender.trim());
                        if (matchedOpt) {
                            matchedOpt.selected = true;
                        }
                    }
                } else {
                    // Handle the case where the current element is not a SELECT with the specific ID
                    form.elements[item.charAt(0).toUpperCase() + item.slice(1)].setAttribute("value", data[item]);
                }
            });
        }


        $("#updateEmployee").click(function () {
            alertSaveChanges();
        });

        function alertSaveChanges() {
            Swal.fire({
                title: 'Do you want to save the changes?',
                confirmButtonText: 'Save',
                showCancelButton: true,
            }).then((result) => {
                /* Read more about isConfirmed, isDenied below */
                if (result.isConfirmed) {
                    updateEmployeeHolder();
                }
            })
        }

        function updateEmployeeHolder() {

            var arrData = {};
            var formelements = $("#updateEmployeeForm .form-group");

            //getting the data from the form
            var formInputs = $("#updateEmployeeForm").serializeArray();
            formInputs.forEach(function (item) {
                arrData[item.name] = item.value;
            });
            arrData.epiId = selectedEmployeeId;


            //function of years
            var userDateInput = formInputs[3].value; // Replace with the user's input
            var result = calculateYearsDifference(userDateInput);


            if (formInputs.length === formelements.length && formInputs[0].value !== '') {
                if (formInputs[0].value != gmailaddress) {
                    proceedUpdate(arrData, result);
                    console.log("gi click lagi ko " + arrData);
                } else {
                    vol1();
                }

            } else {
                alertError();
            }
        }

        function proceedUpdate(arrData, result) {

            alert(`Purok ${arrData.AddressPurok}, ${arrData.AddressBarangay}, ${arrData.AddressMunicipality}, ${arrData.AddressProvince}`);
            //AJAX UPDATE DEPARTMENT
            $.ajax
                ({
                    url: "../api/adminapi/updateEmployee",
                    type: "POST",
                    data:
                    {
                        upemp: arrData,
                        age: result,
                        address: `Purok ${arrData.AddressPurok}, ${arrData.AddressBarangay}, ${arrData.AddressMunicipality}, ${arrData.AddressProvince}`
                             
                    },
                })
                .done(function () {
                    $("#updateEmployeeForm")[0].reset();
                    $("#modalEmployeeUpdate").modal("toggle");
                    displayEmployeeData();
                    displaySavedProgress();
                });
        }



        $("tbody").delegate(".EmployeeDelete", "click", function (e) {
            var i = e.target.closest("a").getAttribute("data-epiId");
            if (i != null) {
                //Insert code here for the delete
                selectedEmployeeId = i;
                console.log(selectedEmployeeId + "mao ni siya");
                alertDeleteConfirmation();
            }
        });

        function alertDeleteConfirmation() {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to Delete this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    proceedDelete();
                }
            })
        }

        function proceedDelete() {
            console.log(selectedEmployeeId + "proceed");
            //AJAX DELETE DEPARTMENT
            $.ajax
                ({
                    url: "../api/adminapi/deleteEmployee",
                    type: "POST",
                    data:

                    {
                        id: selectedEmployeeId
                    },
                })
                .done(function () {
                    displayEmployeeData();
                    alertDeleteInfo();
                });
        }



        /////////////
        ///populating baranggay
        function baranggay() {
            const baranggayInput = document.getElementById("Barangay");
            const suggestions = document.getElementById("suggestionsBar");

            const data = [];

            fetch("../../js/baranggay.js")
                .then(response => response.json())
                .then(data => {
                    data = data;

                    baranggayInput.addEventListener("input", function () {
                        const inputText = baranggayInput.value;
                        updateSuggestions(inputText, data);
                    });

                    document.addEventListener("click", function (event) {
                        if (!suggestions.contains(event.target)) {
                            suggestions.innerHTML = "";
                        }
                    });
                });


            function updateSuggestions(inputText, data) {
                const filteredData = data.filter(function (item) {
                    return item.name.toLowerCase().includes(inputText.toLowerCase());
                });

                renderSuggestions(filteredData);
            }

            function renderSuggestions(filteredData) {
                suggestions.innerHTML = "";

                filteredData.forEach(function (item) {
                    const suggestionItem = document.createElement("li");
                    suggestionItem.textContent = item.name;
                    suggestionItem.addEventListener("click", function () {
                        baranggayInput.value = item.name;
                        suggestions.innerHTML = "";
                    });
                    suggestions.appendChild(suggestionItem);
                });

                if (filteredData.length > 0) {
                    suggestions.style.display = "block";
                } else {
                    suggestions.style.display = "none";
                }
            }
        }



        /////////////
        ///populating municipality
        function Municipality() {
            const municipalityInput = document.getElementById("Municipality");
            const suggestions = document.getElementById("suggestionsMuni");

            const data = [];

            fetch("../../js/municipality.js")
                .then(response => response.json())
                .then(data => {
                    data = data;

                    municipalityInput.addEventListener("input", function () {
                        const inputText = municipalityInput.value;
                        updateSuggestions(inputText, data);
                    });

                    document.addEventListener("click", function (event) {
                        if (!suggestions.contains(event.target)) {
                            suggestions.innerHTML = "";
                        }
                    });
                });


            function updateSuggestions(inputText, data) {
                const filteredData = data.filter(function (item) {
                    return item.name.toLowerCase().includes(inputText.toLowerCase());
                });

                renderSuggestions(filteredData);
            }

            function renderSuggestions(filteredData) {
                suggestions.innerHTML = "";

                filteredData.forEach(function (item) {
                    const suggestionItem = document.createElement("li");
                    suggestionItem.textContent = item.name;
                    suggestionItem.addEventListener("click", function () {
                        municipalityInput.value = item.name;
                        suggestions.innerHTML = "";
                    });
                    suggestions.appendChild(suggestionItem);
                });

                if (filteredData.length > 0) {
                    suggestions.style.display = "block";
                } else {
                    suggestions.style.display = "none";
                }
            }
        }


        /////////////
        ///populating municipality
        function Province() {
            const provinceInput = document.getElementById("Province");
            const suggestions = document.getElementById("suggestionsProv");

            const data = [];

            fetch("../../js/province.js")
                .then(response => response.json())
                .then(data => {
                    data = data;

                    provinceInput.addEventListener("input", function () {
                        const inputText = provinceInput.value;
                        updateSuggestions(inputText, data);
                    });

                    document.addEventListener("click", function (event) {
                        if (!suggestions.contains(event.target)) {
                            suggestions.innerHTML = "";
                        }
                    });
                });


            function updateSuggestions(inputText, data) {
                const filteredData = data.filter(function (item) {
                    return item.name.toLowerCase().includes(inputText.toLowerCase());
                });

                renderSuggestions(filteredData);
            }

            function renderSuggestions(filteredData) {
                suggestions.innerHTML = "";

                filteredData.forEach(function (item) {
                    const suggestionItem = document.createElement("li");
                    suggestionItem.textContent = item.name;
                    suggestionItem.addEventListener("click", function () {
                        provinceInput.value = item.name;
                        suggestions.innerHTML = "";
                    });
                    suggestions.appendChild(suggestionItem);
                });

                if (filteredData.length > 0) {
                    suggestions.style.display = "block";
                } else {
                    suggestions.style.display = "none";
                }
            }
        }


















        function alertDeleteInfo() {
            Swal.fire(
                'Deleted!',
                'Your file has been deleted.',
                'success'
            )
        }


        function vol1() {
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Inputted name is already in the data',
            })
        }
        function alertError() {
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Input the necessary elements!',
            })
        }

        function displaySavedProgress() {
            Swal.fire({
                icon: 'success',
                title: 'Your work has been saved',
                showConfirmButton: false,
                timer: 1500
            })

        }



    });//ayaw ni hilabti




</script>
